package coco;

import java.util.Arrays;
import java.util.PriorityQueue;
import java.util.Queue;

public class coco {
	  public static String longestPalindrome(String s) {
		    if (s.length() == 0) return "";
		    int maxLen = 0;
		    int index = 0;
		    boolean[][] isP = new boolean[s.length()][s.length()];
		    for (int k = 0; k < s.length(); k++) {
		    	for (int i = 0; i < s.length(); i++) {
		      	int j = i + k;
		        if (j >= s.length()) break;
		        if (i == j) {
		        	System.out.println(s.charAt(i));
		        	isP[i][j] = true;
		        } else if (i == j - 1) {
		        	System.out.println("1");
		        //	System.out.println(s.charAt(i));
		        	isP[i][j] = (s.charAt(i) == s.charAt(j) ? true: false);
		        } else if (isP[i + 1][j - 1] && s.charAt(i) == s.charAt(j)) {
		        	  System.out.println("general");
		          isP[i][j] = true;
		          if (j - i > maxLen) {
		          	maxLen = j - i;
		            index = i;
		          }
		        }
		      }
		    }
		    return s.substring(index, index + maxLen + 1);
		  }
	  
	  public static void main(String[] args) {
		  String ans = longestPalindrome("abbc");
		  System.out.println(ans);
	  }
}
